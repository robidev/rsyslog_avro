version: '3.7'

services:

  syslog_from_ot:
    image: tcnksm/omkafka
    hostname: rsyslog
    depends_on:
      - kafka
    networks:
      - default

  test-adapter:
    build:
      context: .
      dockerfile: Dockerfile.test
      args:
        branch: ${SOURCE_BRANCH:-(detached)}
        commit: ${SOURCE_COMMIT:-0}
        build: ${CI_BUILD:-0}
    environment:
      - BOOTSTRAP_SERVERS=kafka:9092
    ports:
      - 5000:5000
    depends_on:
      - kafka
      - kafka-create-topics
    networks:
      - default

  kafka-create-topics:
    image: confluentinc/cp-kafka
    depends_on:
      - kafka
    # We defined a dependency on "kafka", but `depends_on` will NOT wait for the
    # dependencies to be "ready" before starting the "kafka-create-topics"
    # container;  it waits only until the dependencies have started.  Hence we
    # must control startup order more explicitly.
    # See https://docs.docker.com/compose/startup-order/
    command: |
      bash -c 'echo Waiting for Kafka to be ready... && \
      cub kafka-ready -b kafka:9092 1 20 && \
      until kafka-topics --create --topic syslog_topic --partitions 1 --replication-factor 1 --if-not-exists --zookeeper zookeeper:32181; do echo "retry creation"; done && \
      sleep infinity'
    environment:
      # The following settings are listed here only to satisfy the image's requirements.
      # We override the image's `command` anyways, hence this container will not start a broker.
      KAFKA_BROKER_ID: ignored
      KAFKA_ZOOKEEPER_CONNECT: ignored
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_TOOLS_LOG4J_LOGLEVEL: WARN
    networks:
      - default
      
  kafka:
    image: confluentinc/cp-kafka
    hostname: kafka
    environment:
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:32181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_ROOT_LOGLEVEL: WARN
      KAFKA_TOOLS_LOG4J_LOGLEVEL: WARN
    networks:
      - default
    links:
      - zookeeper

  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: syslog_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 32181
      ZOOKEEPER_SERVER_ID: 1
    networks:
      - default

networks:
  default:

